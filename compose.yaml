# docker-compose.yml

services:
  # Service for your Node.js API
  api:
    build:
      context: ./backend # Path to your backend folder relative to this docker-compose.yml
      dockerfile: Dockerfile
    container_name: hygieneresto_api
    ports:
      - "5001:5001" # Maps host port 5001 to API container port 5001
    environment:
      # Pass your .env variables from the host to the container
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 5001 # The port your Express API listens on INSIDE the container
      HOST: db # IMPORTANT: This is the database service name in Docker Compose
      USERNAME: ${USERNAME}
      PASSWORD: ${PASSWORD}
      DATABASE: ${DATABASE}
      DB_PORT: 3306 # IMPORTANT: This is the INTERNAL port of the MySQL container (standard 3306)
      JWT_SECRET: ${JWT_SECRET}
      TZ: Europe/Paris
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET} # Ajout√© pour Firebase
    env_file:
      - ./backend/.env # Path to your .env file relative to docker-compose.yml
    depends_on:
      db:
        condition: service_healthy # The API will only start if the DB is healthy
    restart: always
    volumes:
      - ./backend:/usr/src/app # Mounts your backend source code
      - ./firebase-admin-keys:/usr/src/app/firebase-admin-keys # <--- CORRECTION MAJEURE ICI
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 45s

  # Service for the MySQL database
  db:
    image: mysql:8.0
    container_name: hygieneresto_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${PASSWORD}
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${USERNAME}
      MYSQL_PASSWORD: ${PASSWORD}
      MYSQL_TCP_BIND_ADDRESS: 0.0.0.0
      TZ: Europe/Paris
      MYSQL_USER_ADMIN: adminuser
      MYSQL_PASSWORD_ADMIN: adminpass123
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - db_data:/var/lib/mysql # Persistent storage for MySQL data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql # Path for your initial SQL script
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Service for phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: hygieneresto_phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      # PMA_USER: adminuser
      # PMA_PASSWORD: adminpass123
      PMA_ARBITRARY: 1
      TZ: Europe/Paris
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy

# Definition of named volumes for data persistence
volumes:
  db_data:
